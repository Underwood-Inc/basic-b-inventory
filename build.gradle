plugins {
    id 'net.minecraftforge.gradle' version '6.0.21'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

group = 'com.magicalstorage'
version = '1.0.0'

java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)
}

minecraft {
    mappings channel: 'official', version: '1.21.9'
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                magicalstorage {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                magicalstorage {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'magicalstorage', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                magicalstorage {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = 'MinecraftForge'
        url = 'https://maven.minecraftforge.net/'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.21.9-50.0.0'
}

jar {
    manifest {
        attributes([
            "Specification-Title"     : "Magical Storage",
            "Specification-Vendor"    : "MagicalStorageTeam",
            "Specification-Version"   : "1",
            "Implementation-Title"    : project.name,
            "Implementation-Version"  : project.jar.archiveVersion,
            "Implementation-Vendor"   : "MagicalStorageTeam",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')